package imageneditor.analisis;

import java_cup.runtime.*;
import imageneditor.DefaultValue;
import imageneditor.objectsManager.canvasManager;
import imageneditor.exceptions.InputsVaciosException;

parser code {:

	canvasManager newCanvasM;
	String id = "";
	String name = "";
	String type = "";
	int red = DefaultValue.INVALID_CL_CODE;
	int blue = DefaultValue.INVALID_CL_CODE;
	int green = DefaultValue.INVALID_CL_CODE;
	String hexaC = "";
	int cuadros = DefaultValue.NO_INICIO_DIMENSION;
	int dimesion = DefaultValue.NO_INICIO_DIMENSION;


	public canvas(Lexer lex, canvasManager canvasM){
		super(lex);
		this.newCanvasM = canvasM;
	}

	public void syntax_error(Symbol cur_token) {
		String message = "Estructura invalida en posición " + cur_token.right
			 + ", token: " + cur_token.value;
		System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<");	 
		System.out.println(message);
		System.out.println("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<");
	}

	private void setNameLienzo(String nameLienzo) throws InputsVaciosException{
		if (name.equals("")) {
			name = nameLienzo;
		} else {
			throw new InputsVaciosException("Lienzo's name " + nameLienzo + " already set");
		}
	}

	private void setTypeLienzo(String typeLienzo) throws InputsVaciosException{
		if (type.equals("")) {
			type = typeLienzo;
		} else {
			throw new InputsVaciosException("Lienzo's type " + typeLienzo + " already set");
		}
	}

	private void setCuadros(int CuadroCl) throws InputsVaciosException {
		if (cuadros == DefaultValue.NO_INICIO_DIMENSION) {
			cuadros = CuadroCl;
		} else {
			throw new InputsVaciosException("Cuadro parameter " + CuadroCl + " can't set");
		}
	}

	private void setDimension(int DimensionCl) throws InputsVaciosException {
		if (dimesion == DefaultValue.NO_INICIO_DIMENSION) {
			dimesion = DimensionCl;
		} else {
			throw new InputsVaciosException("Dimension parameter " + DimensionCl + " can't set");
		}
	}

	private void setRedCode(int RedCl) throws InputsVaciosException {
		if ((red == DefaultValue.INVALID_CL_CODE) && (hexaC.equals(""))) {
			red = RedCl;
		} else {
			throw new InputsVaciosException("Red code " + RedCl + " can't set");
		}
	}

	private void setBlueCode(int BlueCl) throws InputsVaciosException {
		if ((blue == DefaultValue.INVALID_CL_CODE) && (hexaC.equals(""))) {
			blue = BlueCl;
		} else {
			throw new InputsVaciosException("Red code " + BlueCl + " can't set");
		}
	}

	private void setGreenCode(int GreenCl) throws InputsVaciosException {
		if ((green == DefaultValue.INVALID_CL_CODE) && (hexaC.equals(""))) {
			green = GreenCl;
		} else {
			throw new InputsVaciosException("Red code " + GreenCl + " can't set");
		}
	}

	private void setHexa(String hexaCd) throws InputsVaciosException{
		if (hexaC.equals("") && (red == DefaultValue.INVALID_CL_CODE) && (blue == DefaultValue.INVALID_CL_CODE) && (green == DefaultValue.INVALID_CL_CODE)) {
			hexaC = hexaCd;
		} else {
			throw new InputsVaciosException("Hexa code " + hexaCd + " can't set");
		}
	}

	private void setlienzo(String idLienzo) throws InputsVaciosException {
		if (!name.equals("") && !type.equals("") && (((red != DefaultValue.INVALID_CL_CODE) && 
			(blue != DefaultValue.INVALID_CL_CODE) && (green != DefaultValue.INVALID_CL_CODE)&& 
			(hexaC.equals(""))) || ((red == DefaultValue.INVALID_CL_CODE) && (blue == DefaultValue.INVALID_CL_CODE) 
			&& (green == DefaultValue.INVALID_CL_CODE)&& (!hexaC.equals("")))) && 
			(cuadros != DefaultValue.NO_INICIO_DIMENSION) && (dimesion != DefaultValue.NO_INICIO_DIMENSION)) {
			
			if (((red != DefaultValue.INVALID_CL_CODE) && (blue != DefaultValue.INVALID_CL_CODE) && (green != DefaultValue.INVALID_CL_CODE)&& (hexaC.equals("")))) {
				newCanvasM.addLienzo(idLienzo, name, type, red, green, blue, cuadros, dimesion);
			} else if (((red == DefaultValue.INVALID_CL_CODE) && (blue == DefaultValue.INVALID_CL_CODE) && (green == DefaultValue.INVALID_CL_CODE)&& (!hexaC.equals("")))) {
				newCanvasM.addLienzo(idLienzo, name, type, hexaC, cuadros, dimesion);
			}
		} else {
			throw new InputsVaciosException("Missing parameter at " + idLienzo + " lienzo");
		}
		cleanValues();
	}

	private void cleanValues(){
		id = "";
		name = "";
		type = "";
		red = DefaultValue.INVALID_CL_CODE;
		blue = DefaultValue.INVALID_CL_CODE;
		green = DefaultValue.INVALID_CL_CODE;
		hexaC = "";
		cuadros = DefaultValue.NO_INICIO_DIMENSION;
		dimesion = DefaultValue.NO_INICIO_DIMENSION;

	}

:}
/* Terminal */
terminal String Pintar, Vars, Colores, Dimension, Cuadro, Hex, Tipo, Fondo,Red, Blue, Green; 
terminal String Tamanio, Nombre, Lienzos, Igual, Menos, Mas, Coma, Intervalo, DosPuntos, PuntoYComa; 
terminal String ParAbierto, ParCerrado, CorAbierto, CorCerrado, LlaveAbierta, LlaveCerrada;
terminal String Comment, HexaCode, Cadena, Identificador, NewVar, Instrucciones,Entero;
//terminal Integer Entero;

/* Non terminal */
non terminal String CANVAS, CUERPO, CARACTERISTICAS, NOMBRE, TIPO, FONDO, TAMANIO, COLOR, CLRGB, LIENZO;

start with CANVAS;

CANVAS		::=	CorAbierto Lienzos DosPuntos CorAbierto CUERPO CorCerrado CorCerrado
				| error:e {: System.out.println("error: "+e);:};

CUERPO		::= LIENZO Coma CUERPO
				| LIENZO
				;
LIENZO 		::= Identificador:e DosPuntos CorAbierto CARACTERISTICAS CorCerrado {: setlienzo(e); :}
				
				;

CARACTERISTICAS	::= NOMBRE Coma CARACTERISTICAS
					| TIPO Coma CARACTERISTICAS
					| FONDO Coma CARACTERISTICAS
					| TAMANIO Coma CARACTERISTICAS
					| NOMBRE
					| TIPO
					| FONDO
					| TAMANIO
					; 

NOMBRE 		::= Nombre DosPuntos Cadena:e {: setNameLienzo(e); :}; 

TIPO 		::= Tipo DosPuntos Cadena:e {: setTypeLienzo(e); :};

FONDO 		::= Fondo DosPuntos CorAbierto COLOR CorCerrado;

COLOR 		::= Hex DosPuntos HexaCode:e {: setHexa(e); :}
				| CLRGB
				;

CLRGB		::=	Red DosPuntos Entero:e Coma CLRGB {: setRedCode(Integer.parseInt(e)); :}
				| Blue DosPuntos Entero:e Coma CLRGB {: setBlueCode(Integer.parseInt(e)); :}
				| Green DosPuntos Entero:e Coma CLRGB {: setGreenCode(Integer.parseInt(e)); :}
				| Red DosPuntos Entero:e {: setRedCode(Integer.parseInt(e)); :}
				| Blue DosPuntos Entero:e {: setBlueCode(Integer.parseInt(e)); :}
				| Green DosPuntos Entero:e {: setGreenCode(Integer.parseInt(e)); :}
				;

TAMANIO 	::= Tamanio DosPuntos CorAbierto Cuadro DosPuntos Entero:e1 Coma Dimension DosPuntos Entero:e2 CorCerrado {: setCuadros(Integer.parseInt(e1)); setDimension(Integer.parseInt(e2)); :}
				| Tamanio DosPuntos CorAbierto Dimension DosPuntos Entero:e1 Coma Cuadro DosPuntos Entero:e2 CorCerrado {: setCuadros(Integer.parseInt(e2)); setDimension(Integer.parseInt(e1)); :}
				;

/*Pintar, Vars, Colores, Dimension, Cuadro, Hex, Red, Blue, Green, Tipo, Fondo, 
Tamanio, Nombre, Lienzos, Igual, Menos, Mas, Coma, Intervalo, DosPuntos, PuntoYComa, 
ParAbierto, ParCerrado, CorAbierto, CorCerrado, LlaveAbierta, LlaveCerrada, 
Comment, HexaCode, Entero, Cadena, Identificador*/