/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imageneditor.frontEnd;

import imageneditor.DefaultValue;
import imageneditor.backEnd.AuxObjects.AuxPaint;
import imageneditor.backEnd.AuxObjects.auxPaintList;
import imageneditor.backEnd.AuxObjects.auxPaintToFile;
import imageneditor.backEnd.Objects.canvasStruct;
import imageneditor.backEnd.Objects.colorsStruct;
import imageneditor.backEnd.Objects.lienzoObj;
import imageneditor.backEnd.Objects.paintStruct;
import imageneditor.backEnd.Objects.variable;
import imageneditor.files.ManejadorArchivo;
import imageneditor.files.ManejadorImagenes;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author angel
 */
public class imagenEditor extends javax.swing.JFrame {

    ManejadorArchivo fileM;
    ManejadorImagenes imageManager = new ManejadorImagenes();
    private canvasStruct canvas;
    private colorsStruct colors;
    private paintStruct paint;
    private auxPaintToFile paintFiles;

    /**
     * Creates new form imagenEditor
     *
     * @param canvas
     * @param colors
     * @param paint
     */
    public imagenEditor(canvasStruct canvas, colorsStruct colors, paintStruct paint) {
        this.canvas = canvas;
        this.colors = colors;
        this.paint = paint;
        this.paintFiles = new auxPaintToFile();
        this.fileM = new ManejadorArchivo();
        initComponents();

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int confirm = JOptionPane.showOptionDialog(null, "Desea salir sin guardar los cambios?", "Salir",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                if (confirm == 0) {
                    lienzosTabbedPane.removeAll();
                    hideIt();
                } else {
                    saveChanges();
                }

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lienzosTabbedPane = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        archivoMenu = new javax.swing.JMenu();
        cargarMenuItem = new javax.swing.JMenuItem();
        guardarMenuItem = new javax.swing.JMenuItem();
        salirMenuItem = new javax.swing.JMenuItem();
        importarMenu = new javax.swing.JMenu();
        generarImagenMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Editor");
        setAlwaysOnTop(true);

        archivoMenu.setText("Archivo");

        cargarMenuItem.setText("Cargar Imagenes");
        cargarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(cargarMenuItem);

        guardarMenuItem.setText("Guardar");
        guardarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(guardarMenuItem);

        salirMenuItem.setText("Salir");
        salirMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(salirMenuItem);

        jMenuBar1.add(archivoMenu);

        importarMenu.setText("Importar");

        generarImagenMenuItem.setText("Generar Imagen");
        generarImagenMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarImagenMenuItemActionPerformed(evt);
            }
        });
        importarMenu.add(generarImagenMenuItem);

        jMenuBar1.add(importarMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lienzosTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1260, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lienzosTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hideIt() {
        this.setVisible(false);
        cargarMenuItem.setEnabled(true);
    }

    private void saveChanges() {
        try {
            fileM.guardarArchivo(paint.getPath() + "1", newFileText());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private String newFileText() {
        String aux = "";
        aux += (DefaultValue.VARS + DefaultValue.COR_ABIERTO + "\n");
        for (variable variablesList : paint.getVariablesList()) {
            aux += ("\t" + DefaultValue.VAR + " " + variablesList.getName() + " "
                    + DefaultValue.IGUAL + " " + variablesList.getValue() + DefaultValue.END_COM + "\n");
        }
        aux += (DefaultValue.COR_CERRADO + "\n\n");

        for (auxPaintList lienzoInstruction : paintFiles.getLienzoInstructions()) {
            aux += (DefaultValue.INSTRUCCIONES + DefaultValue.PAR_ABIERTO + lienzoInstruction.getOwner()
                    + DefaultValue.PAR_CERRADO + DefaultValue.COR_ABIERTO + "\n");
            for (AuxPaint paintList : lienzoInstruction.getPaintList()) {
                aux += ("\t" + DefaultValue.PINTAR + DefaultValue.PAR_ABIERTO + paintList.getName()
                        + DefaultValue.COMA + paintList.getPosX() + DefaultValue.COMA + paintList.getPosY()
                        + DefaultValue.PAR_CERRADO + DefaultValue.END_COM + "\n");
            }
            aux += (DefaultValue.COR_CERRADO + "\n\n");
        }
        return aux;
    }

    private void cargarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarMenuItemActionPerformed
        createWindows();
        cargarMenuItem.setEnabled(false);
    }//GEN-LAST:event_cargarMenuItemActionPerformed

    private void guardarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarMenuItemActionPerformed
        System.out.println("Codigo salida:\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n" + newFileText() + ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
        saveChanges();
    }//GEN-LAST:event_guardarMenuItemActionPerformed

    private void salirMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirMenuItemActionPerformed
        int confirm = JOptionPane.showOptionDialog(null, "Desea salir sin guardar los cambios?", "Salir",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (confirm == 0) {
            lienzosTabbedPane.removeAll();
            hideIt();
        } else {
            saveChanges();
        }
    }//GEN-LAST:event_salirMenuItemActionPerformed

    private void generarImagenMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarImagenMenuItemActionPerformed
        for (lienzoObj lienzo : canvas.getLienzos()) {
            if (imageManager.crearImagen("", lienzo, paintFiles.getPaintIstruction(lienzo.getId()).getPaintList(), colors.findColorObject(lienzo.getId()))) {
                JOptionPane.showMessageDialog(this, "Imagen " + lienzo.getId() + "." + lienzo.getTipo() + " creada exitosamente", "Imagen", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "No se creo la imagen " + lienzo.getId() + "." + lienzo.getTipo(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_generarImagenMenuItemActionPerformed

    private void createWindows() {
        for (int i = 0; i < canvas.lienzosListSize(); i++) {
            try {
                lienzoEditor newLienzo = new lienzoEditor(canvas.getLienzo(i), colors.findColorObject(canvas.getLienzo(i).getId()),
                        paint.findIsntruccionsP(canvas.getLienzo(i).getId()), paintFiles);
                lienzosTabbedPane.add(canvas.getLienzo(i).getName(), newLienzo);
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println("Error crear el lienzo " + canvas.getLienzo(i).getName());
                JOptionPane.showMessageDialog(this, "Error crear el lienzo " + canvas.getLienzo(i).getName(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu archivoMenu;
    private javax.swing.JMenuItem cargarMenuItem;
    private javax.swing.JMenuItem generarImagenMenuItem;
    private javax.swing.JMenuItem guardarMenuItem;
    private javax.swing.JMenu importarMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTabbedPane lienzosTabbedPane;
    private javax.swing.JMenuItem salirMenuItem;
    // End of variables declaration//GEN-END:variables
}
