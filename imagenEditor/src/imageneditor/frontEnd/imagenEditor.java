/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imageneditor.frontEnd;

import imageneditor.backEnd.Objects.canvasStruct;
import imageneditor.backEnd.Objects.colorsStruct;
import imageneditor.backEnd.Objects.paintStruct;

/**
 *
 * @author angel
 */
public class imagenEditor extends javax.swing.JFrame {

    private canvasStruct canvas;
    private colorsStruct colors;
    private paintStruct paint;

    /**
     * Creates new form imagenEditor
     *
     * @param canvas
     * @param colors
     * @param paint
     */
    public imagenEditor(canvasStruct canvas, colorsStruct colors, paintStruct paint) {
        this.canvas = canvas;
        this.colors = colors;
        this.paint = paint;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lienzosTabbedPane = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        archivoMenu = new javax.swing.JMenu();
        cargarMenuItem = new javax.swing.JMenuItem();
        guardarMenuItem = new javax.swing.JMenuItem();
        salirMenuItem = new javax.swing.JMenuItem();
        importarMenu = new javax.swing.JMenu();
        generarImagenMenuItem = new javax.swing.JMenuItem();

        setTitle("Editor");
        setAlwaysOnTop(true);

        archivoMenu.setText("Archivo");

        cargarMenuItem.setText("Cargar Imagenes");
        cargarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(cargarMenuItem);

        guardarMenuItem.setText("Guardar");
        guardarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(guardarMenuItem);

        salirMenuItem.setText("Salir");
        salirMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(salirMenuItem);

        jMenuBar1.add(archivoMenu);

        importarMenu.setText("Importar");

        generarImagenMenuItem.setText("Generar Imagen");
        importarMenu.add(generarImagenMenuItem);

        jMenuBar1.add(importarMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lienzosTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1260, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lienzosTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarMenuItemActionPerformed
        createWindows();
    }//GEN-LAST:event_cargarMenuItemActionPerformed

    private void guardarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarMenuItemActionPerformed

    }//GEN-LAST:event_guardarMenuItemActionPerformed

    private void salirMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salirMenuItemActionPerformed

    private void createWindows() {
        lienzosTabbedPane.removeAll();
        for (int i = 0; i < canvas.lienzosListSize(); i++) {
            try {
                lienzoEditor newLienzo = new lienzoEditor(canvas.getLienzo(i), colors.findColorObject(canvas.getLienzo(i).getId()), paint.findIsntruccionsP(canvas.getLienzo(i).getId()));
                lienzosTabbedPane.add(canvas.getLienzo(i).getName(), newLienzo);
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println("Error crear el lienzo " + canvas.getLienzo(i).getName());
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu archivoMenu;
    private javax.swing.JMenuItem cargarMenuItem;
    private javax.swing.JMenuItem generarImagenMenuItem;
    private javax.swing.JMenuItem guardarMenuItem;
    private javax.swing.JMenu importarMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTabbedPane lienzosTabbedPane;
    private javax.swing.JMenuItem salirMenuItem;
    // End of variables declaration//GEN-END:variables
}
